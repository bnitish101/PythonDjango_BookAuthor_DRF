python manage.py shell 
from appBookAuthor.models import Books, Authors, BookType


>>> a4.objects.get(id=4)

>>> a4.book_author.create(title='Book4', description='This is fourth book', publish_date='2022-12-31', price='104', book_type=BookType.objects.get(id=1))

>>> b5 = Books(title='Book5', description='This is fifth book', publish_date='2023-01-01', price='105', book_type=bt4)

# Note:<book_author> is defind as related_name='book_author' in the Books Model, defult is small leter model's name then _set

# From Patent table
# Fetch all the records for author four
>>> a4.book_author.all() 
# Add many to many relation
>>> a4.book_author.add(b2) 
# Remove many to many relation
>>> a4.book_author.remove(b2) 

# From Chield table
# Fetch all the records for author five
>>> b5.author.all()
# Add many to many relation
>>> b5.author.add(a4)
# Remove many to many relation
>>> b5.author.remove(a4)

# Create Bulk relation
# fetch all authors
>>> a = Authors.objects.all()
# fetch book five
>>> b5 = Books.objects.get(id=5)
# create relation for all authors at once
>>> b5.author.add(*a)
# Removes all objects from the related object set:
>>> b5.author.clear()
# fetch Multiple authors

>>> a_mul = [Authors.objects.get(id=1), Authors.objects.get(id=3), Authors.objects.get(id=4)]
# create multiple M2M relationship at once
>>> b5.author.add(*a_mul)  